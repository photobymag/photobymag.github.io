name: Deploy to GitHub Pages

on:
  push:
    branches: [main]  # main 브랜치로 푸시될 때마다 워크플로우가 실행됩니다.
  workflow_dispatch:  # 수동으로 워크플로우를 실행할 수 있습니다.

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4  # 리포지토리를 체크아웃합니다.

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20  # Node.js 버전을 설정합니다.

      - name: Install dependencies
        run: npm install  # 프로젝트 종속성을 설치합니다.

      - name: Build your site
        run: npm run build  # 사이트를 빌드합니다.

      - name: Run Prettier
        run: |
          npx prettier --write dist/**/*.html  # Prettier로 HTML 파일을 포맷팅합니다.

      - name: Commit and push formatted HTML
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add dist/**/*.html
          git commit -m "Format HTML files with Prettier"
          git push  # 포맷팅된 파일을 커밋하고 푸시합니다.

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # GitHub Pages 환경을 설정합니다.
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4  # 리포지토리를 다시 체크아웃합니다.

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # GitHub Pages에 배포합니다.
